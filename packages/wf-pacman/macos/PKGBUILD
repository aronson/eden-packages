# Tracks official Arch Linux package maintained by Eli Schwartz <eschwartz@archlinux.org>
# https://aur.archlinux.org/packages/pacman-static

# [Wonderful] pkgname
pkgname=wf-pacman
pkgver=6.1.0
_bash_ver=5.1
_libarchive_ver=3.6.0
_sslver=3.3.1
pkgrel=1
# [Wonderful] pkgdesc
pkgdesc="Wonderful toolchain build of the pacman package manager"
arch=('i486' 'i686' 'pentium4' 'x86_64' 'arm' 'armv6h' 'armv7h' 'aarch64' 'arm64')
url="https://www.archlinux.org/pacman/"
license=('GPL')
# [Wonderful] remove depends/makedepends
options=('!emptydirs')

# pacman
source=(git+"https://github.com/aronson/pacman.git#branch=wonderful")

# bash
source+=("https://ftp.gnu.org/gnu/bash/bash-5.1.tar.gz")

# xz
source+=("https://github.com/tukaani-project/xz/releases/download/v5.6.2/xz-5.6.2.tar.gz")

# iconv
source+=("https://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.17.tar.gz")

# openssl
source+=("https://www.openssl.org/source/openssl-${_sslver}.tar.gz"{,.asc})
validpgpkeys+=('8657ABB260F056B1E5190839D9C4D26D0E604491'
              '7953AC1FBC3DC8B3B292393ED5E9E43F7DF9EE8C'
              'A21FAB74B0088AA361152586B8EF1A6BA9DA2D5C'
              'EFC0A467D613CB83C7ED6D30D894E2CE8B3D79F5')

validpgpkeys+=('8657ABB260F056B1E5190839D9C4D26D0E604491'  # Matt Caswell <matt@openssl.org>
              '7953AC1FBC3DC8B3B292393ED5E9E43F7DF9EE8C'   # Matt Caswell <matt@openssl.org>
              'A21FAB74B0088AA361152586B8EF1A6BA9DA2D5C'   # Tom�? Mr�z <tm@t8m.info>
              'EFC0A467D613CB83C7ED6D30D894E2CE8B3D79F5')  # OpenSSL security team key
# libarchive
source+=("https://github.com/libarchive/libarchive/releases/download/v${_libarchive_ver}/libarchive-${_libarchive_ver}.tar.xz"{,.asc})
validpgpkeys+=('A5A45B12AD92D964B89EEE2DEC560C81CEC2276E'  # Martin Matuska <mm@FreeBSD.org>
              'DB2C7CF1B4C265FAEF56E3FC5848A18B8F14184B') # Martin Matuska <martin@matuska.org>
# [Wonderful] group
groups=("wonderful-base")

sha512sums=('SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP')

# [Wonderful]
. "/wf/config/runtime-env-vars.sh"

prepare() {
    # pacman
    cd "${srcdir}"/pacman

    # [Wonderful]
    sed -i -e "s/Pacman v\%s - libalpm v\%s/Pacman v%s - libalpm v%s (wf-pacman)/" src/pacman/pacman.c
}

build() {
    export CFLAGS="$CFLAGS -Wno-int-conversion"
    export PKG_CONFIG_PATH="${srcdir}"/temp/usr/lib/pkgconfig
    export PATH="${srcdir}/temp/usr/bin:${PATH}"

    # xz
    pushd xz-5.6.2
    ./configure --prefix="${srcdir}/temp/usr" \
                --disable-nls \
                --disable-silent-rules \
                --enable-static \
                --disable-shared
    make -j10
    make install
    popd

    # iconv
    pushd libiconv-1.17
    ./configure --prefix="${srcdir}/temp/usr" \
                --enable-static \
                --disable-shared
    make -j10
    make install
    popd

    # libarchive
    cd "${srcdir}"/libarchive-${_libarchive_ver}
    CPPFLAGS="$CPPFLAGS -I${srcdir}/temp/usr/include" CFLAGS="$CFLAGS -L${srcdir}/temp/usr/lib" \
        ./configure --prefix="${srcdir}/temp/usr" \
                    --without-xml2 \
                    --enable-static \
                    --disable-shared \
                    --disable-{bsdtar,bsdcat,bsdcpio,bsdunzip} \
                    --without-nettle \
                    --without-expat
    make -j10
    make install

    # openssl
    cd "${srcdir}"/openssl-${_sslver}
    case ${CARCH} in
        x86_64)
            openssltarget='darwin64-x86_64-cc'
            ;;
        aarch64|arm64)
            openssltarget='darwin64-arm64-cc'
            ;;
    esac
    perl ./Configure --prefix="${srcdir}/temp/usr" \
        no-shared \
        "${openssltarget}"
    make -j10
    make install_dev

    # bash
    pushd "${srcdir}"/bash-5.1
    CPPFLAGS="$CPPFLAGS -I${srcdir}/temp/usr/include" CFLAGS="$CFLAGS -L${srcdir}/temp/usr/lib" \
        ./configure --prefix="$WF_PATH"
    make -j10
    popd

    # Finally, it's a pacman!
    mkdir -p "${srcdir}"/pacman/builddir
    cd "${srcdir}"/pacman/builddir
    # [Wonderful] meson flag changes
    CFLAGS="$CFLAGS -I${srcdir}/temp/usr/include" LDFLAGS="$LDFLAGS -L${srcdir}/temp/usr/lib -liconv" \
        meson setup \
            --wipe \
            --prefix="$WF_PATH" \
            --sysconfdir="$WF_PATH/etc" \
            --localstatedir="$WF_PATH/pacman" \
            --includedir="$WF_PATH"/lib/pacman/include \
            --libdir="$WF_PATH"/lib/pacman/lib \
            --buildtype=release \
            -Db_lto=true \
            -Db_lto_mode=thin \
            -Db_staticpic=false \
            -Dbuildstatic=true \
            -Ddefault_library=static \
            -Ddoc=disabled \
            -Ddoxygen=disabled \
            -Di18n=false \
            -Dldconfig="$WF_PATH"/bin/ldconfig \
            -Droot-dir="$WF_PATH" \
            -Dscriptlet-shell="$WF_PATH"/bin/bash \
            ..
    ninja
}

package() {
    cd "${srcdir}"/pacman/builddir
    DESTDIR="${pkgdir}" ninja install

    # Do it the wrong way for deps
    cd "${srcdir}"/bash-5.1
    make DESTDIR="${pkgdir}" install

    # [Wonderful] custom packaging process
    cd "$pkgdir"
    install -dm755 bin
    mv ."$WF_PATH"/bin/pacman bin/wf-pacman
    mv ."$WF_PATH"/bin/vercmp bin/wf-pacman-vercmp
    mv ."$WF_PATH"/etc etc/
    rm etc/pacman.conf
    mv ."$WF_PATH"/bin/* bin/
    install -dm755 share
    install -dm755 etc
    install -m644 "/wf/packages/wf-pacman/pacman.conf" etc
    gsed -i -e "s/%ARCH%/"$CARCH"/g" -e "s/%OS%/"$WF_HOST_OS"/g" etc/pacman.conf
    rm -r opt

    wf_relocate_path_to_destdir
}

